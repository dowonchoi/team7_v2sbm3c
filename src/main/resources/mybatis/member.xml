<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="dev.mvc.member.MemberDAOInter">

  <!-- 중복 아이디 검사 -->
  <select id="checkID" resultType="int" parameterType="string">
    SELECT COUNT(id)
    FROM member
    WHERE id = #{id}
  </select>

  <!-- 일반 회원 가입 -->
  <insert id="create" parameterType="dev.mvc.member.MemberVO">
    INSERT INTO member (memberno, id, email, passwd, mname, tel, zipcode, address1, address2, mdate, grade, supplier_approved, business_file, business_file_origin)
    VALUES (member_seq.nextval, #{id}, #{email}, #{passwd}, #{mname}, #{tel}, #{zipcode},
            #{address1}, #{address2}, sysdate, #{grade}, #{supplier_approved}, #{business_file}, #{business_file_origin})
  </insert>

  <!-- 공급자 회원 가입 (인증 파일 포함) -->
  <insert id="insertMember" parameterType="dev.mvc.member.MemberVO">
    INSERT INTO member (memberno, id, email, passwd, mname, tel, zipcode, address1, address2,
                        mdate, grade, supplier_approved, business_file, business_file_origin)
    VALUES (member_seq.nextval, #{id}, #{email}, #{passwd}, #{mname}, #{tel}, #{zipcode},
            #{address1}, #{address2}, sysdate, #{grade}, #{supplier_approved}, #{business_file}, #{business_file_origin})
  </insert>


  <!-- 회원 목록 -->
  <select id="list" resultType="dev.mvc.member.MemberVO">
    SELECT memberno, id, passwd, mname, tel, zipcode, address1, address2, mdate, grade, supplier_approved
    FROM member
    WHERE is_visible = 'Y'
    ORDER BY grade ASC, id ASC
  </select>

  <!-- memberno로 회원 정보 조회 -->
  <select id="read" resultType="dev.mvc.member.MemberVO" parameterType="int">
    SELECT memberno, id, email, passwd, mname, tel, zipcode, address1, address2, mdate, grade, supplier_approved, business_file, business_file_origin
    FROM member
    WHERE memberno = #{memberno}
  </select>

  <!-- id로 회원 정보 조회 -->
  <select id="readById" resultType="dev.mvc.member.MemberVO" parameterType="string">
    SELECT memberno, id, email, passwd, mname, tel, zipcode, address1, address2, mdate, grade, supplier_approved
    FROM member
    WHERE id = #{id}
  </select>

  <!-- 회원 정보 수정 -->
  <update id="update" parameterType="dev.mvc.member.MemberVO">
    UPDATE member
    SET mname = #{mname},
        tel = #{tel},
        zipcode = #{zipcode},
        address1 = #{address1},
        address2 = #{address2}
    WHERE memberno = #{memberno}
  </update>

  <!-- 회원 삭제 -->
  <delete id="delete" parameterType="int">
    DELETE FROM member
    WHERE memberno = #{memberno}
  </delete>
  
  <update id="hide" parameterType="int">
    UPDATE member
    SET is_visible = 'N'
    WHERE memberno = #{memberno}
  </update>
  
  <delete id="deleteByAdmin" parameterType="int">
    DELETE FROM member
    WHERE memberno = #{memberno}
  </delete>

  <!-- 로그인 -->
  <select id="login" resultType="dev.mvc.member.MemberVO" parameterType="map">
    SELECT memberno, id, email, passwd, mname, tel, zipcode, address1, address2, mdate, grade, supplier_approved
    FROM member
    WHERE id = #{id}
      AND passwd = #{passwd}
      AND is_visible = 'Y'
  </select>

  <!-- 패스워드 검사 -->
  <select id="passwd_check" resultType="int" parameterType="map">
    SELECT COUNT(memberno)
    FROM member
    WHERE memberno = #{memberno}
      AND passwd = #{passwd}
  </select>

  <!-- 패스워드 변경 -->
  <update id="passwd_update" parameterType="map">
    UPDATE member
    SET passwd = #{passwd}
    WHERE memberno = #{memberno}
  </update>

  <!-- 사용 중인 등급 목록 조회 -->
  <select id="getUsedGradesInRange" resultType="int" parameterType="map">
    SELECT grade
    FROM member
    WHERE grade BETWEEN #{gradeStart} AND #{gradeEnd}
  </select>

  <!-- 관리자: 공급자 승인 처리 -->
  <update id="updateSupplierApproved" parameterType="map">
    UPDATE member
    SET supplier_approved = #{supplier_approved}
    WHERE memberno = #{memberno}
  </update>


  <!-- 관리자: 승인 대기 중인 공급자 목록 -->
  <select id="selectPendingSuppliers" resultType="dev.mvc.member.MemberVO">
    SELECT memberno, id, mname, tel, grade, supplier_approved, business_file
    FROM member
    WHERE grade BETWEEN 5 AND 15
      AND supplier_approved = 'N'
  </select>

  <!-- 등급 변경 -->
  <update id="updateGrade" parameterType="map">
    UPDATE member SET grade = #{grade} WHERE memberno = #{memberno}
  </update>
  
    <!-- 공급자 승인 거절 처리: supplier_approved = 'R' -->
  <update id="updateSupplierRejected" parameterType="int">
    UPDATE member
    SET supplier_approved = 'R'
    WHERE memberno = #{memberno}
  </update>

  <!-- 공급자 승인 취소 처리: supplier_approved = 'N' (대기 상태로 변경) -->
  <update id="updateSupplierApprovalToPending" parameterType="int">
    UPDATE member
    SET supplier_approved = 'N'
    WHERE memberno = #{memberno}
  </update>
  
  <!-- 이름과 전화번호로 ID 찾기 -->
  <select id="findIdByNameAndTel" resultType="dev.mvc.member.MemberVO" parameterType="map">
    SELECT *
    FROM member
    WHERE mname = #{mname} AND tel = #{tel}
  </select>
  
  <!-- 아이디와 전화번호로 비밀번호 찾기 -->
  <select id="findPasswdByIdAndTel" resultType="dev.mvc.member.MemberVO" parameterType="map">
    SELECT *
    FROM member
    WHERE id = #{id} AND tel = #{tel}
  </select>
  
  <update id="updatePasswdById" parameterType="map">
    UPDATE member
    SET passwd = #{passwd}
    WHERE id = #{id}
  </update>
  
  <select id="findByIdAndTel" parameterType="map" resultType="dev.mvc.member.MemberVO">
    SELECT *
    FROM member
    WHERE id = #{id}
      AND tel = #{tel}
  </select>
  
  <select id="findByEmail" resultType="dev.mvc.member.MemberVO" parameterType="String">
    SELECT *
    FROM member
    WHERE email = #{email}
  </select>

  
</mapper>